/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ceyloncare.payment;

import ceyloncare.login.Connect;
import ceyloncare.patient.PatientHistoryRecord;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Wasura Dananjith
 */
public class Payment extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    float totalPaid,totalDue,totalCharge,totalWard = 0;
    int countPayment = 0; // To generate the new payment_id
    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
        setLocationRelativeTo(null);
        
        // Generates new payment_id for each new payment
        this.generateID();
        
        if (lbTotalCharge.getText().equals("")){
            totalCharge=0;
        }
        else
            totalCharge=Float.parseFloat(lbTotalCharge.getText());
        if (txtTotalPaid.getText().equals("")){
            totalPaid=0;
        }
        else
            totalPaid=Float.parseFloat(txtTotalPaid.getText());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbPatientID = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbDisease = new javax.swing.JLabel();
        btnGetDetails = new javax.swing.JButton();
        lbAdmitNo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        lbTotalFee = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lbWardNo = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbWardType = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbWardCharge = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        lbTotalTest = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtDays = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lbTotalWard = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtPaymentDate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cmbPaymentMode = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lbTotalCharge = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lbDue = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtPaymentID = new javax.swing.JTextField();
        txtTotalPaid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPaymentModeDetails = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDischarge = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtDisDate = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment Details");
        setResizable(false);

        JPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));
        JPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Admission Number");
        JPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 27, -1, -1));

        jLabel2.setText("Patient ID");
        JPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel3.setText("Name");
        JPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel4.setText("Admit Date");
        JPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 149, -1, -1));

        jLabel5.setText("Disease");
        JPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 189, -1, -1));
        JPanel.add(lbPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 61, 151, 30));
        JPanel.add(lbName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 101, 151, 30));
        JPanel.add(lbDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 141, 151, 30));
        JPanel.add(lbDisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 181, 151, 30));

        btnGetDetails.setText("Get Details");
        btnGetDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailsActionPerformed(evt);
            }
        });
        JPanel.add(btnGetDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 27, -1, -1));
        JPanel.add(lbAdmitNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 48, 31));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Doctor Details"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doctor ID", "Doctor Name", "Fee"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 27, 276, 75));

        jLabel7.setText("Total Fee");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 116, -1, -1));
        jPanel1.add(lbTotalFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 109, 81, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ward Details"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("Ward Number");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 27, -1, -1));
        jPanel2.add(lbWardNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 200, 30));

        jLabel9.setText("Ward Type");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 68, -1, -1));
        jPanel2.add(lbWardType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 30));

        jLabel10.setText("Charge per Bed");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 110, -1, -1));
        jPanel2.add(lbWardCharge, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 103, 190, 30));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Details"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("Total Charge");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 116, -1, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Test ID", "Test Name", "Charge"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 27, 276, 75));
        jPanel3.add(lbTotalTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 109, 77, 30));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Payment Details"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setText("No. of Days");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 45, -1, -1));

        txtDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDaysKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDaysKeyTyped(evt);
            }
        });
        jPanel4.add(txtDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 42, 52, -1));

        jLabel13.setText("Total Ward Charge");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 45, -1, -1));

        lbTotalWard.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel4.add(lbTotalWard, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 39, 120, 30));

        jLabel14.setText("Payment Date");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 71, -1, -1));
        jPanel4.add(txtPaymentDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 68, 170, -1));

        jLabel15.setText("(YYYY-MM-DD)");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 71, -1, -1));

        cmbPaymentMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "by Cash", "by Cheque", "by Credit Card", "by Debit Card" }));
        cmbPaymentMode.setSelectedIndex(-1);
        jPanel4.add(cmbPaymentMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 94, 120, -1));

        jLabel16.setText("Payment Mode");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 97, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("TOTAL CHARGE");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("TOTAL PAID");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        lbTotalCharge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTotalCharge.setForeground(new java.awt.Color(255, 0, 0));
        jPanel4.add(lbTotalCharge, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 182, 163, 31));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("DUE CHARGES");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        lbDue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel4.add(lbDue, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 253, 163, 31));

        jLabel18.setText("Payment ID");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 19, -1, -1));

        txtPaymentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentIDActionPerformed(evt);
            }
        });
        jPanel4.add(txtPaymentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 16, 163, -1));

        txtTotalPaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalPaidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalPaidKeyTyped(evt);
            }
        });
        jPanel4.add(txtTotalPaid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 170, -1));

        jLabel6.setText("Mode Details");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 130, -1, -1));

        txtPaymentModeDetails.setColumns(20);
        txtPaymentModeDetails.setRows(5);
        jScrollPane1.setViewportView(txtPaymentModeDetails);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 300, 50));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDischarge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDischarge.setForeground(new java.awt.Color(255, 0, 0));
        btnDischarge.setText("Discharge");
        btnDischarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDischargeActionPerformed(evt);
            }
        });

        jLabel21.setText("Discharge Date");

        jLabel22.setText("(YYYY-MM-DD)");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnSave)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnEdit))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDisDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDischarge))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnEdit))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDischarge)
                    .addComponent(jLabel21)
                    .addComponent(txtDisDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // To get details about patients
    private void btnGetDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDetailsActionPerformed
        this.hide();
        PatientHistoryRecord frm = new PatientHistoryRecord();
        frm.setVisible(true);
    }//GEN-LAST:event_btnGetDetailsActionPerformed

    // To reset the fields
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        this.hide();
        Payment frm = new Payment();
        frm.setVisible(true);
        this.generateID();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try{
            con=Connect.ConnectDB();
            
            // Checking whether the necessary fields are empty before inserting data
            if (txtPaymentID.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please Enter Payment ID","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtDays.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please Enter No. of Days","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtPaymentDate.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please Enter Payment Date","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtTotalPaid.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please Enter Total Paid","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            double add1 = Double.parseDouble(lbTotalCharge.getText());
            double add2 = Double.parseDouble(txtTotalPaid.getText());
            if (add2 > add1) {
                JOptionPane.showMessageDialog( this, "Total Paid is more than Total Charge","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Checking whether the entered payment_id is already in the table
            String query="SELECT payment_id FROM payment WHERE payment_id= " + txtPaymentID.getText() + "";
            pst= con.prepareStatement(query);
            rs=pst.executeQuery();
            if(rs.next()){
                JOptionPane.showMessageDialog( this, "Record already exists","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Query to insert data into payment table
            String query2= "INSERT INTO payment "
                    + "VALUES('" + txtPaymentID.getText() + "','"+ lbAdmitNo.getText() + "','"+ txtDays.getText() + "','"
                    + txtPaymentDate.getText() + "','" + cmbPaymentMode.getSelectedItem()+ "','" + lbTotalCharge.getText() 
                    + "','"+ txtTotalPaid.getText() + "','"+ lbDue.getText()+"','"+txtPaymentModeDetails.getText()+"')";
            
            pst=con.prepareStatement(query2);
            pst.execute();
            JOptionPane.showMessageDialog(this,"Successfully Saved","Success",JOptionPane.INFORMATION_MESSAGE);
            btnSave.setEnabled(false);

        }catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    // To delete a particular record from payment table
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try{
            int x = JOptionPane.showConfirmDialog(null," Are you sure want to delete ?","Confirmation",JOptionPane.YES_NO_OPTION);
            if (x==0)
            {
                con=Connect.ConnectDB();
                String query= "DELETE FROM payment WHERE payment_id = " + txtPaymentID.getText() + "";
                pst=con.prepareStatement(query);
                pst.execute();
                JOptionPane.showMessageDialog(this,"Successfully Deleted","Success",JOptionPane.INFORMATION_MESSAGE);

                this.hide();
                Payment frm = new Payment();
                frm.setVisible(true);
            }
        }catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // To update details regarding a particular payment
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try{
            con=Connect.ConnectDB();
            String query= "UPDATE payment SET payment_id='"+ txtPaymentID.getText() + 
                    "',no_of_days='"+ txtDays.getText() + "',payment_date='"+ txtPaymentDate.getText() 
                    + "',payment_mode='" + cmbPaymentMode.getSelectedItem()+ "',payment_mode_details='" 
                    + txtPaymentModeDetails.getText() + "',due_charge='"+ lbDue.getText() 
                    + "',total_charge='"+ lbTotalCharge.getText()
                    +"',total_paid='"+txtTotalPaid.getText()
                    +"' WHERE payment_id= " + txtPaymentID.getText() +"";  
            
            pst=con.prepareStatement(query);
            pst.execute();
            JOptionPane.showMessageDialog(this,"Successfully Updated","Success",JOptionPane.INFORMATION_MESSAGE);
            

        }catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        this.hide();
        // Load PaymentRecord form to select already inserted payment details
        PaymentRecord frm= new PaymentRecord();
        frm.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtPaymentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentIDActionPerformed

    // Calculate Total Charge when number of days are entered
    private void txtDaysKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDaysKeyReleased
        
        //Calculate Total Ward Charge
        totalWard = Integer.parseInt(txtDays.getText())*Integer.parseInt(lbWardCharge.getText());
        lbTotalWard.setText(Float.toString(totalWard));
        
        // Calculate Total Charge by Adding Total Doctor Fee and Total Test Fee to Total Ward Charge
        totalCharge=totalWard+Float.parseFloat(lbTotalFee.getText())+Float.parseFloat(lbTotalTest.getText());
        lbTotalCharge.setText(Float.toString(totalCharge));
    }//GEN-LAST:event_txtDaysKeyReleased

    // Can only type numbers in this txtDays field
    private void txtDaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDaysKeyTyped
       char c=evt.getKeyChar();
       if (!(Character.isDigit(c)|| (c== KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
           getToolkit().beep();
           evt.consume();
       }   
    }//GEN-LAST:event_txtDaysKeyTyped

    // Can only type numbers in this txtTotalPaid field
    private void txtTotalPaidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalPaidKeyTyped
       char c=evt.getKeyChar();
       if (!(Character.isDigit(c)|| (c== KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
           getToolkit().beep();
           evt.consume();
       } 
    }//GEN-LAST:event_txtTotalPaidKeyTyped

    // Generate Due Charges when Total Paid is entered
    private void txtTotalPaidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalPaidKeyReleased
        if (txtTotalPaid.getText().equals("")){
            lbDue.setText("0");
        }
        else{
            totalDue=totalCharge-Float.parseFloat(txtTotalPaid.getText());
            lbDue.setText(Float.toString(totalDue));
        }
    }//GEN-LAST:event_txtTotalPaidKeyReleased

    private void btnDischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDischargeActionPerformed
        // To check whether the payment details are not entered in the required fields
        if (txtPaymentID.getText().equals("")){
            JOptionPane.showMessageDialog( this, "Please Enter Payment Details!","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try{
                con = Connect.ConnectDB();
                
                // To check whether the particular patient is dicharged or not
                String query1 = "SELECT discharged FROM admission WHERE admit_id='"+lbAdmitNo.getText()+"'";
                pst = con.prepareStatement(query1);
                rs = pst.executeQuery();
                rs.next();
                if (rs.getString("discharged").equals("1")){
                    JOptionPane.showMessageDialog( this, "This patient is already discharged!","Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                // To check whether there is a due charge for a particular patient before discharging
                String query = "SELECT due_charge FROM payment WHERE admit_id='"+lbAdmitNo.getText()+"'";
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
                if (rs.next()){
                    totalDue=Float.parseFloat(rs.getString(1));
                }
            }
            catch (SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
            }
        // If there is no Due Charge
        if (totalDue==0){
            // If discharge date is not entered
            if (txtDisDate.getText().equals("")){
                JOptionPane.showMessageDialog( this, "Please Enter Discharge Date!","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            try{
                con = Connect.ConnectDB();
                
                // Update the discharge status
                String query = "UPDATE admission SET discharged='1',discharge_date='"+txtDisDate.getText()+"' WHERE admit_id='"+lbAdmitNo.getText()+"'";
                pst = con.prepareStatement(query);
                pst.execute();
                
                // Update current number of patients in the ward
                String query1 = "UPDATE ward SET current_no_patients=current_no_patients-1 WHERE ward_no=(SELECT ward_no "
                        + "FROM admission WHERE admit_id='"+lbAdmitNo.getText()+"')";
                pst = con.prepareStatement(query1);
                pst.execute();
                
                JOptionPane.showMessageDialog(this,"DISCHARGED","Success",JOptionPane.INFORMATION_MESSAGE);
            }
            catch (SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
            }
        }
        else{
            JOptionPane.showMessageDialog( this, "Cannot Discharge. There is a Due Payment","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDischargeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel;
    public javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDischarge;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnGetDetails;
    private javax.swing.JButton btnNew;
    public javax.swing.JButton btnSave;
    public javax.swing.JButton btnUpdate;
    public javax.swing.JComboBox cmbPaymentMode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable jTable2;
    public javax.swing.JTable jTable3;
    public javax.swing.JLabel lbAdmitNo;
    public javax.swing.JLabel lbDate;
    public javax.swing.JLabel lbDisease;
    public javax.swing.JLabel lbDue;
    public javax.swing.JLabel lbName;
    public javax.swing.JLabel lbPatientID;
    public javax.swing.JLabel lbTotalCharge;
    public javax.swing.JLabel lbTotalFee;
    public javax.swing.JLabel lbTotalTest;
    public javax.swing.JLabel lbTotalWard;
    public javax.swing.JLabel lbWardCharge;
    public javax.swing.JLabel lbWardNo;
    public javax.swing.JLabel lbWardType;
    public javax.swing.JTextField txtDays;
    public javax.swing.JTextField txtDisDate;
    public javax.swing.JTextField txtPaymentDate;
    public javax.swing.JTextField txtPaymentID;
    public javax.swing.JTextArea txtPaymentModeDetails;
    public javax.swing.JTextField txtTotalPaid;
    // End of variables declaration//GEN-END:variables

    // Generates new payment_id for each new payment
    private void generateID() {
        try{
            con = Connect.ConnectDB();
            
            // Selecting last payment_id in the table using rs.last()
            String query = "SELECT payment_id FROM payment ORDER BY payment_id";
            pst=con.prepareStatement(query);
            rs=pst.executeQuery();
            rs.last();
            countPayment = Integer.parseInt(rs.getString(1))+1;
            txtPaymentID.setText(Integer.toString(countPayment));
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }
    }
}
