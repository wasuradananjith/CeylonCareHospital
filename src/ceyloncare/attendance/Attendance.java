/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ceyloncare.attendance;

import ceyloncare.login.Connect;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wasura Dananjith
 */
public class Attendance extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int count=0;
    String exists="no";
    /**
     * Creates new form Attendance
     */
    public Attendance() {
        initComponents();
        setLocationRelativeTo(null);
        
        // Get data for jTable1 when this form is loading
        this.getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbEmpName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbType = new javax.swing.JLabel();
        btnGetDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmbMonth = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtDays = new javax.swing.JTextField();
        btnIntcrement = new javax.swing.JButton();
        btnDecrement = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mark Attendance");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee Details"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Employee ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 31, -1, -1));

        txtEmpID.setText("Search here");
        txtEmpID.setToolTipText("");
        txtEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIDActionPerformed(evt);
            }
        });
        txtEmpID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpIDKeyReleased(evt);
            }
        });
        jPanel1.add(txtEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 28, 123, -1));

        jLabel2.setText("Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 68, -1, -1));
        jPanel1.add(lbEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 61, 214, 30));

        jLabel3.setText("Type");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 110, -1, -1));
        jPanel1.add(lbType, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 102, 214, 30));

        btnGetDetails.setText("Get Details");
        btnGetDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailsActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 27, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Type"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 16, -1, 162));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Attendance Details"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Month");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 30, -1, -1));

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmbMonth.setSelectedIndex(-1);
        cmbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonthActionPerformed(evt);
            }
        });
        cmbMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbMonthKeyReleased(evt);
            }
        });
        jPanel2.add(cmbMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 27, 193, -1));

        jLabel5.setText("No. of Present Days");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 61, -1, -1));

        txtDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDaysKeyTyped(evt);
            }
        });
        jPanel2.add(txtDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 58, 193, -1));

        btnIntcrement.setText("Increment");
        btnIntcrement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntcrementActionPerformed(evt);
            }
        });
        jPanel2.add(btnIntcrement, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 96, -1, -1));

        btnDecrement.setText("Decrement");
        btnDecrement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecrementActionPerformed(evt);
            }
        });
        jPanel2.add(btnDecrement, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 96, -1, -1));

        btnUpdate.setText("Update Details");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(btnUpdate)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmpIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpIDKeyReleased
        this.search();
    }//GEN-LAST:event_txtEmpIDKeyReleased

    private void btnGetDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDetailsActionPerformed
        try{
            con=Connect.ConnectDB();
            
            // Select the particular row
            int row= jTable1.getSelectedRow();
            String table_click= jTable1.getModel().getValueAt(row, 0).toString();

            // Get data for particular emp_id
            String query= "SELECT emp_id,emp_name,emp_type FROM employee WHERE emp_id= '" + table_click + "'";
            pst=con.prepareStatement(query);
            rs=  pst.executeQuery();
            
            // Add data to the required fields
            if(rs.next()){
                String addID=rs.getString("emp_id");
                this.txtEmpID.setText(addID);
                
                String addName=rs.getString("emp_name");
                this.lbEmpName.setText(addName);
                
                String addType=rs.getString("emp_type");
                this.lbType.setText(addType);
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(this,"No row selected!");
        }
    }//GEN-LAST:event_btnGetDetailsActionPerformed

    private void cmbMonthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMonthKeyReleased
     
    }//GEN-LAST:event_cmbMonthKeyReleased

    private void cmbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonthActionPerformed
        con = Connect.ConnectDB();
        try{
            // Select the required column from attendance table based on the selected month in the combo box
            String query = "SELECT "+cmbMonth.getSelectedItem().toString()+" FROM attendance WHERE emp_id='"
                    + txtEmpID.getText()+"'" ;
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            
            if (rs.next()){
                count = Integer.parseInt(rs.getString(1));
                // If there is not null result set, it means that the count has been initiated on the column already
                exists="yes";
            }
            // Set the value of the txtDays Text Field into count 
            txtDays.setText(Integer.toString(count));
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_cmbMonthActionPerformed

    private void btnIntcrementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntcrementActionPerformed
        // Increment the count
        ++count;
        txtDays.setText(Integer.toString(count));
    }//GEN-LAST:event_btnIntcrementActionPerformed

    private void btnDecrementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecrementActionPerformed
        // count cannot be less than 0
        if (count==0){
            JOptionPane.showMessageDialog( this, "Cannot Decrement Further","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Decrement the count
        --count;
        txtDays.setText(Integer.toString(count));
    }//GEN-LAST:event_btnDecrementActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        con = Connect.ConnectDB();
        try{
            // If count is already been initiated for the particular month for the particular employee
            if (exists.equals("yes")){
                // Run an update query
                String query = "UPDATE attendance SET "+cmbMonth.getSelectedItem().toString()+"='"+Integer.toString(count)+"'";
                pst = con.prepareStatement(query);
                pst.execute();
            }
            else{
                // Run an insert query becuase this is the first time we initiate the count
                String query ="INSERT INTO attendance(emp_id,"+cmbMonth.getSelectedItem().toString()+") "
                        + "VALUES ('"+ txtEmpID.getText()+"','"+Integer.toString(count)+"')";
                pst = con.prepareStatement(query);
                pst.execute();
            }
            JOptionPane.showMessageDialog(this,"Successfully Updated","Sucess",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        this.hide();
        // Create a new object from Attendance Form Class
        Attendance frm = new Attendance();
        frm.setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    // Can only type numbers in this txtDays field
    private void txtDaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDaysKeyTyped
        char c=evt.getKeyChar();
       if (!(Character.isDigit(c)|| (c== KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
           getToolkit().beep();
           evt.consume();
       }     
    }//GEN-LAST:event_txtDaysKeyTyped

    private void txtEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDecrement;
    private javax.swing.JButton btnGetDetails;
    private javax.swing.JButton btnIntcrement;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbEmpName;
    private javax.swing.JLabel lbType;
    private javax.swing.JTextField txtDays;
    private javax.swing.JTextField txtEmpID;
    // End of variables declaration//GEN-END:variables

    // Get data for jTable1 when this form is loading
    private void getData() {
        con = Connect.ConnectDB();
        try{
            String query = "SELECT emp_id,emp_name,emp_type FROM employee";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            
            while(rs.next()){
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    // Search employee table
    private void search() {
        try{
            con=Connect.ConnectDB();
            String query="SELECT emp_id,emp_name,emp_type FROM employee "
                    + "WHERE emp_id LIKE '%"+txtEmpID.getText()+"%' OR emp_name LIKE '%"
                    +txtEmpID.getText()+"%' OR emp_type LIKE '%"+txtEmpID.getText()+"%'";
            pst=con.prepareStatement(query);
            rs=pst.executeQuery();
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            while(rs.next())
            {
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, e);
        }
    }
}
