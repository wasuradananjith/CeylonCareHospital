/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ceyloncare.user;

import ceyloncare.login.Connect;
import ceyloncare.user.DoctorUserRegistration;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;




/**
 *
 * @author Wasura Dananjith
 */
public class UserRegistrationRecord extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    String choice = "";// To identify from which mode the control flow was passed 
    int flag=0;// To identify from which form this form was called
    /**
     * Creates new form UsersRegistrationRecord
     */
    public UserRegistrationRecord(String ch,int n) {
        initComponents();
        con= Connect.ConnectDB();
        setLocationRelativeTo(null);
        choice=ch;
        flag=n;
        
        // Get data for jTable1 when this form is loading 
        this.getData(choice);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtUserSearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Records");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Username", "Password", "Type", "Employee ID"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Search User");

        txtUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserSearchActionPerformed(evt);
            }
        });
        txtUserSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserSearchKeyReleased(evt);
            }
        });

        btnAdd.setText("Add to Form");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.hide();
        // flag==2 means this form is called from DoctorUserRegistration form, so will be redirected to the same form when window is closing
        if (flag==2){
            DoctorUserRegistration frm = new DoctorUserRegistration(choice);
            frm.setVisible(true);
        }
        else{
            // Else we will be redirected to the UserRegistration form
            UserRegistration frm = new UserRegistration(choice);
            frm.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtUserSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserSearchKeyReleased
        this.search();
    }//GEN-LAST:event_txtUserSearchKeyReleased

    private void txtUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try{
            con=Connect.ConnectDB();
            
            // Select the particular row
            int row= jTable1.getSelectedRow();
            String table_click= jTable1.getModel().getValueAt(row, 1).toString();
            
            // Selecting data for a particular username
            String query= "SELECT u.name_user,u.username,u.password,u.type,u.emp_id,e.emp_nic,e.emp_tel,e.emp_address"
                    + ",e.emp_email,e.emp_gender,e.date_joined"
                    + " FROM user u,employee e WHERE e.emp_id=u.emp_id AND u.username= '" + table_click + "'";
            pst=con.prepareStatement(query);
            rs=  pst.executeQuery();
            
            // Add data to the required fields in the created Form Object
            if(rs.next()){
                
                //flag==0 checks whether the function call got when Registering a Doctor as a User
                if (flag==0){
                    this.hide();
                    // Create a new object from UserRegistration Form Class
                    UserRegistration frm = new UserRegistration(choice);
                    frm.setVisible(true);

                    String addUsername=rs.getString("username");
                    frm.txtUsername.setText(addUsername);

                    String addPassword=rs.getString("password");
                    frm.txtPassword.setText(addPassword);

                    String addName=rs.getString("name_user");
                    frm.txtName.setText(addName);

                    String addContact=rs.getString("emp_tel");
                    frm.txtContactNo.setText(addContact);

                    String addEmail=rs.getString("emp_email");
                    frm.txtEmail.setText(addEmail);

                    String addType=rs.getString("type");
                    frm.lbType.setText(addType);

                    String addID=rs.getString("emp_id");
                    frm.txtID.setText(addID);

                    String addNIC=rs.getString("emp_nic");
                    frm.txtNIC.setText(addNIC);

                    String addAddress=rs.getString("emp_address");
                    frm.txtAddress.setText(addAddress);

                    String addGender=rs.getString("emp_gender");
                    frm.cmbGen.setSelectedItem(addGender);

                    String addDate=rs.getString("date_joined");
                    frm.txtDate.setText(addDate);

                    frm.btnSave.setEnabled(false);
                    frm.btnDelete.setEnabled(true);
                    frm.btnUpdate.setEnabled(true);
                }
                else{
                    //If the function call got when Registering a Doctor NOT as a user this will be executed
                    this.hide();
                    // Create a new object from DoctorUserRegistration Form Class
                    DoctorUserRegistration frm = new DoctorUserRegistration(choice);
                    frm.setVisible(true);
                    
                    String addUsername=rs.getString("username");
                    frm.txtUsername.setText(addUsername);

                    String addPassword=rs.getString("password");
                    frm.txtPassword.setText(addPassword);

                    String addName=rs.getString("name_user");
                    frm.lbName.setText(addName);
                    
                    String addID=rs.getString("emp_id");
                    frm.lbID.setText(addID);
                }
                
            }
          
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(this,"No row selected!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRegistrationRecord("",0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtUserSearch;
    // End of variables declaration//GEN-END:variables
    
    // Search user table
    private void search(){
        
        try{
            con=Connect.ConnectDB();
            String query="SELECT name_user,username,password,type,emp_id FROM user "
                    + "WHERE (name_user LIKE '%"+txtUserSearch.getText()+"%' OR username LIKE '%"
                    +txtUserSearch.getText()+"%' OR type LIKE '%"+txtUserSearch.getText()+"%' OR "
                    + "emp_id LIKE '%"+txtUserSearch.getText()+"%') AND type='"+choice+"'";
            pst=con.prepareStatement(query);
            rs=pst.executeQuery();
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            while(rs.next())
            {
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),
                rs.getString(4),rs.getString(5)});
            }
        } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, e);
        }
    }
    
    // Get data for jTable1 when this form is loading 
    private void getData(String choice) {
        con=Connect.ConnectDB();
        try{
            String query="SELECT name_user,username,password,type,emp_id FROM user WHERE type='"+choice+"'";
            pst=con.prepareStatement(query);
            rs= pst.executeQuery();
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            while(rs.next())
            {
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),
                rs.getString(4),rs.getString(5)});
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
}
