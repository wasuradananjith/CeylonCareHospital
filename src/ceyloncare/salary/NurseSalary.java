/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ceyloncare.salary;

import ceyloncare.login.Connect;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wasura Dananjith
 */
public class NurseSalary extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int days,absentDays=0;
    double netSalary,ot,salaryPerDay,basicSalary=0;
    /**
     * Creates new form MaintenanceStaffSalary
     */
    public NurseSalary() {
        initComponents();
        setLocationRelativeTo(null);
        
        // Get data for jTable1 when this form is loading
        this.getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        btnGetDetails = new javax.swing.JButton();
        lbEmpName = new javax.swing.JLabel();
        lbHours = new javax.swing.JLabel();
        lbSalary = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbMonth = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        lbDays = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtOT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lbNetSalary = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nurse Salary");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee Details"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Employee ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 31, -1, -1));

        jLabel2.setText("Employee Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 68, -1, -1));

        jLabel3.setText("Salary per Month");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 140, -1, -1));

        jLabel5.setText("Normal Work Hours");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 100, -1, -1));

        txtEmpID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpIDKeyReleased(evt);
            }
        });
        jPanel1.add(txtEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 28, 120, -1));

        btnGetDetails.setText("Get Details");
        btnGetDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailsActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 26, 90, -1));
        jPanel1.add(lbEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 63, 220, 27));

        lbHours.setText("10");
        jPanel1.add(lbHours, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 95, 220, 27));
        jPanel1.add(lbSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 134, 220, 27));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Salary"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 440, 160));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Salary Details"));
        jPanel2.setForeground(new java.awt.Color(255, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Month");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 30, -1, -1));

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmbMonth.setSelectedIndex(-1);
        cmbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonthActionPerformed(evt);
            }
        });
        cmbMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbMonthKeyReleased(evt);
            }
        });
        jPanel2.add(cmbMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 27, 193, -1));

        jLabel7.setText("No. of Present Days");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 60, -1, -1));
        jPanel2.add(lbDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 56, 193, 27));

        jLabel8.setText("OT Hours");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 94, -1, -1));

        txtOT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOTKeyTyped(evt);
            }
        });
        jPanel2.add(txtOT, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 90, 193, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("NET SALARY");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 20));

        lbNetSalary.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbNetSalary.setForeground(new java.awt.Color(255, 0, 0));
        jPanel2.add(lbNetSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 133, 191, 35));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(74, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonthActionPerformed
        con = Connect.ConnectDB();
        try{
            // Select the required column from attendance table based on the selected month in the combo box
            String query = "SELECT "+cmbMonth.getSelectedItem().toString()+" FROM attendance WHERE emp_id='"
            + txtEmpID.getText()+"'" ;
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            rs.next();
            
            // Assign the number of present days to the variable days and display it on the lbDays label
            days = Integer.parseInt(rs.getString(1));
            lbDays.setText(Integer.toString(days));
    
            // basicSalary is the salary which we extracted from the getData() method
            basicSalary = Double.parseDouble(lbSalary.getText());
            
            salaryPerDay = basicSalary/20;
            absentDays = 20-days;
            netSalary= basicSalary - absentDays*salaryPerDay;
            lbNetSalary.setText(Double.toString(netSalary));
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_cmbMonthActionPerformed

    private void cmbMonthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMonthKeyReleased

    }//GEN-LAST:event_cmbMonthKeyReleased

    private void txtEmpIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpIDKeyReleased
        this.search();
    }//GEN-LAST:event_txtEmpIDKeyReleased

    private void btnGetDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDetailsActionPerformed
        try{
            con=Connect.ConnectDB();
            
            // Select the particular row
            int row= jTable1.getSelectedRow();
            String table_click= jTable1.getModel().getValueAt(row, 0).toString();

            // Selecting data for a particular emp_id
            String query= "SELECT emp_id,emp_name,emp_salary FROM employee "
                    + "WHERE emp_id='"+table_click+"'";
            pst=con.prepareStatement(query);
            rs=  pst.executeQuery();
            
            // Add data to the required fields
            if(rs.next()){
                String addID=rs.getString("emp_id");
                this.txtEmpID.setText(addID);
                
                String addName=rs.getString("emp_name");
                this.lbEmpName.setText(addName);
               
                String addSalary=rs.getString("emp_salary");
                this.lbSalary.setText(addSalary);
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(this,"No row selected!");
        }
    }//GEN-LAST:event_btnGetDetailsActionPerformed

    // Calculate netSalary when the number of over time hours are typed, instantly
    private void txtOTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOTKeyReleased
        if (!txtOT.getText().equals("")){
            ot = netSalary + Double.parseDouble(txtOT.getText())/10*salaryPerDay;
            lbNetSalary.setText(Double.toString(ot));
        }
        else{
            lbNetSalary.setText(Double.toString(netSalary));
        }
    }//GEN-LAST:event_txtOTKeyReleased

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        this.hide();
        // Reset all the fields
        NurseSalary frm = new NurseSalary();
        frm.setVisible(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        con = Connect.ConnectDB();
        try{
            // Checking whether the entered emp_id is already in the table
            String query = "SELECT emp_id FROM salary WHERE emp_id='"+txtEmpID.getText()+"'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            
            // If emp_id already in the table then Update
            if (rs.next()){
                query = "UPDATE salary SET "+cmbMonth.getSelectedItem().toString()+"='"+Double.toString(netSalary)+"'";
                pst = con.prepareStatement(query);
                pst.execute();
                JOptionPane.showMessageDialog(this,"Successfully Updated","Success",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                // If emp_id is not in the table then insert a new record
                query ="INSERT INTO salary(emp_id,"+cmbMonth.getSelectedItem().toString()+") "
                        + "VALUES ('"+ txtEmpID.getText()+"','"+Double.toString(netSalary)+"')";
                pst = con.prepareStatement(query);
                pst.execute();
                JOptionPane.showMessageDialog(this,"Successfully Inserted","Success",JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        this.hide();
        // Reset all the fields by calling same form
        NurseSalary frm = new NurseSalary();
        frm.setVisible(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    // Can only type numbers in this txtOT field
    private void txtOTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOTKeyTyped
        char c=evt.getKeyChar();
       if (!(Character.isDigit(c)|| (c== KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
           getToolkit().beep();
           evt.consume();
       }     
    }//GEN-LAST:event_txtOTKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NurseSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NurseSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NurseSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NurseSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NurseSalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGetDetails;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbDays;
    private javax.swing.JLabel lbEmpName;
    private javax.swing.JLabel lbHours;
    private javax.swing.JLabel lbNetSalary;
    private javax.swing.JLabel lbSalary;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtOT;
    // End of variables declaration//GEN-END:variables

    // Get data for jTable1 when this form is loading
    private void getData() {
        con = Connect.ConnectDB();
        try{
            String query = "SELECT emp_id,emp_name,emp_salary FROM employee "
                    + "WHERE emp_type='Nurse'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            
            while(rs.next()){
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    // Search employee table
    private void search() {
        try{
            con=Connect.ConnectDB();
            String query="SELECT emp_id,emp_name,emp_salary FROM employee "
                    + "WHERE (emp_id LIKE '%"+txtEmpID.getText()+"%' OR emp_name LIKE '%"
                    +txtEmpID.getText()+"%' OR emp_salary LIKE '%"+txtEmpID.getText()+"%') "
                    + "AND emp_type='Nurse'";
            pst=con.prepareStatement(query);
            rs=pst.executeQuery();
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            while(rs.next())
            {
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
        } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, e);
        }
    }
}
