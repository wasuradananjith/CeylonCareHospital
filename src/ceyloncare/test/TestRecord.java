/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ceyloncare.test;

import ceyloncare.login.Connect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wasura Dananjith
 */
public class TestRecord extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    /**
     * Creates new form TestRecord
     */
    public TestRecord() {
        initComponents();
        con= Connect.ConnectDB();
        
        // Get data for jTable1 when this form is loading 
        this.getData();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearchTest = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Test Records");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Test ID", "Test Name", "Charge", "Description"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Search Test");

        txtSearchTest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchTestKeyReleased(evt);
            }
        });

        btnAdd.setText("Add to Form");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtSearchTest, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearchTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       this.hide();
       // Load ManageTests form because earlier control flow was passed from that form
       ManageTests frm = new ManageTests();
       frm.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try{
            con=Connect.ConnectDB();
            
            // Select the particular row
            int row= jTable1.getSelectedRow();
            String table_click= jTable1.getModel().getValueAt(row, 0).toString();
            
            // Selecting data for a particular test_id
            String query= "SELECT * FROM test WHERE test_id= '" + table_click + "'";
            pst=con.prepareStatement(query);
            rs=  pst.executeQuery();
            
            // Add data to the required fields in the created Form Object
            if(rs.next()){
                this.hide();
                // Create a new object from ManageTests Form Class
                ManageTests frm = new ManageTests();
                frm.setVisible(true);
                
                String addID=rs.getString("test_id");
                frm.txtTestID.setText(addID);
                
                String addName=rs.getString("test_name");
                frm.txtTestName.setText(addName);
                
                String addBeds=rs.getString("test_fee");
                frm.txtTestCharge.setText(addBeds);
                
                String addCharge=rs.getString("description");
                frm.txtTestDes.setText(addCharge);
               
                frm.btnSave.setEnabled(false);
                frm.btnDelete.setEnabled(true);
                frm.btnUpdate.setEnabled(true);
            }
          
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(this,"No row selected!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtSearchTestKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchTestKeyReleased
        this.search();
    }//GEN-LAST:event_txtSearchTestKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearchTest;
    // End of variables declaration//GEN-END:variables

    // Get data for jTable1 when this form is loading 
    private void getData() {
        con=Connect.ConnectDB();
        try{
            String query="SELECT * FROM test";
            pst=con.prepareStatement(query);
            rs= pst.executeQuery();
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            while(rs.next())
            {
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Search test table
    private void search() {
        try{
            con=Connect.ConnectDB();
            String query="SELECT * FROM test "
                    + "WHERE test_id LIKE '%"+txtSearchTest.getText()+"%' OR test_name LIKE '%"
                    +txtSearchTest.getText()+"%' OR test_fee LIKE '%"+txtSearchTest.getText()+"%' OR "
                    + "description LIKE '%"+txtSearchTest.getText()+"%'";
            pst=con.prepareStatement(query);
            rs=pst.executeQuery();
            DefaultTableModel registrationModel = (DefaultTableModel)jTable1.getModel();
            registrationModel.setRowCount(0);
            while(rs.next())
            {
                registrationModel.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),
                rs.getString(4)});
            }
        } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, e);
        }
    }
}
